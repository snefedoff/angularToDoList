{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-item/add-item.component.ts","webpack:///src/app/add-item/add-item.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/todo-list-item/todo-list-item.component.ts","webpack:///src/app/todo-list-item/todo-list-item.component.html","webpack:///src/app/todo-list.service.ts","webpack:///src/app/todo-list/todo-list.component.ts","webpack:///src/app/todo-list/todo-list.component.html","webpack:///src/app/todo-options/todo-options.component.ts","webpack:///src/app/todo-options/todo-options.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddItemComponent","todoListService","txt","add","onAddItem","selector","templateUrl","styleUrls","AppComponent","filt","selectedFilter","text","filterText","setFilter","setFilterText","AppModule","declarations","imports","providers","bootstrap","HeaderComponent","TodoListItemComponent","onDelete","onImportant","onDone","TodoItem","name","isDone","isImportant","TodoListService","todoList","Array","init","todoText","push","idx","splice","record","filter","item","length","providedIn","TodoListComponent","indexOf","list","includes","TodoOptionsComponent","onFilterSelect","onFilterTextInput","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {TodoListService} from \"../todo-list.service\";\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  constructor(private todoListService: TodoListService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAddItem(txt: string): void {\n    this.todoListService.add(txt);\n  }\n\n}\n","<mat-form-field class=\"todo-list__input\">\n  <mat-label>Add new to-do</mat-label>\n  <input\n    #addItem\n    matInput\n    placeholder=\"Master TypeScript and Angular\"\n    value=\"\"\n  >\n</mat-form-field>\n\n<button\n  mat-raised-button\n  class=\"btn-addtodo\"\n  (click)=\"onAddItem(addItem.value); addItem.value='';\"\n>\n  Add to-do\n</button>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\n  selectedFilter: string;\n  filterText: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  setFilter(filt) {\n    this.selectedFilter = filt;\n  }\n\n  setFilterText(text) {\n    this.filterText = text;\n  }\n}\n","<div class=\"page\">\n  <app-header\n    class=\"app-header\"\n  ></app-header>\n\n  <main class=\"app-container\">\n\n    <app-todo-options\n      (onFilterSelect)=\"setFilter($event);\"\n      (onFilterTextInput)=\"setFilterText($event);\"\n    ></app-todo-options>\n    <app-todo-list\n      [selectedFilter]=\"selectedFilter\"\n      [filterText]=\"filterText\"\n    ></app-todo-list>\n    <app-add-item></app-add-item>\n\n  </main>\n\n  <footer class=\"app-footer\"></footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListItemComponent } from './todo-list-item/todo-list-item.component';\nimport { AddItemComponent } from './add-item/add-item.component';\nimport { TodoOptionsComponent } from './todo-options/todo-options.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    TodoListItemComponent,\n    AddItemComponent,\n    TodoOptionsComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatDividerModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TodoListService} from \"../todo-list.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public todoListService: TodoListService) { }\n\n  ngOnInit(): void {\n  }\n}\n","<header>\n  <h1>Angular ToDo App</h1>\n  <p>{{this.todoListService.getDoneTodosCount()}} of {{this.todoListService.getAllTodosCount()}} done</p>\n</header>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-todo-list-item',\n  templateUrl: './todo-list-item.component.html',\n  styleUrls: ['./todo-list-item.component.scss']\n})\nexport class TodoListItemComponent implements OnInit {\n\n  @Input() text: string;\n  @Input() isDone: boolean;\n  @Input() isImportant: boolean;\n\n  @Output() onDelete = new EventEmitter();\n  @Output() onImportant = new EventEmitter();\n  @Output() onDone = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-list-item class=\"todo-list-item\">\n  <div class=\"item-description {{isImportant?'item-important':''}} {{isDone ? 'item-done' : ''}}\">{{text}}</div>\n\n  <div class=\"action-buttons\">\n    <button\n      mat-button\n      class=\"btn-important\"\n      (click)=\"onImportant.emit()\"\n    >\n      <mat-icon>notification_important</mat-icon>\n    </button>\n    <button\n      mat-button\n      class=\"btn-done\"\n      (click)=\"onDone.emit()\"\n    >\n      <mat-icon>done_all</mat-icon>\n    </button>\n    <button\n      mat-button\n      class=\"btn-delete\"\n      (click)=\"onDelete.emit()\"\n    >\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n\n</mat-list-item>\n<mat-divider></mat-divider>\n\n","import {Injectable} from '@angular/core';\n\nexport class TodoItem {\n  name: string;\n  isDone: boolean;\n  isImportant: boolean;\n\n  constructor(text: string) {\n    this.name = text;\n    this.isDone = false;\n    this.isImportant = false;\n  }\n}\n\nexport interface ITodoService {\n  add(todoText: string);\n\n  remove(idx: number);\n\n  update(idx: number, record: TodoItem);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService implements ITodoService {\n\n  public todoList: Array<TodoItem>;\n\n  constructor() {\n    this.todoList = new Array<TodoItem>();\n    this.init();\n  }\n\n  add(todoText: string) {\n    this.todoList.push(new TodoItem(todoText));\n  }\n\n  remove(idx: number) {\n    this.todoList.splice(idx, 1);\n  }\n\n  update(idx: number, record: TodoItem) {\n  }\n\n  init() {\n    this.add('Learn HTML');\n    this.add('Learn CSS');\n    this.add('Learn JavaScript');\n    this.add('Learn Angular');\n    this.add('Make something awesome ');\n    this.add('Profit');\n  }\n\n  getDoneTodosCount() {\n    return this.todoList.filter(item => item.isDone).length;\n  }\n\n  getAllTodosCount() {\n    return this.todoList.length;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TodoItem, TodoListService} from '../todo-list.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss']\n})\nexport class TodoListComponent implements OnInit {\n\n  @Input() selectedFilter: string;\n  @Input() filterText: string;\n\n  constructor(public todoListService: TodoListService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onItemDelete(item): void {\n    this.todoListService.todoList.splice(\n      this.todoListService.todoList.indexOf(item),\n      1\n    );\n  }\n\n  onItemImportant(item): void {\n    item.isImportant = !item.isImportant;\n  }\n\n  onItemDone(item): void {\n    item.isDone = !item.isDone;\n  }\n\n  getList(): TodoItem[] {\n\n    let list = this.todoListService.todoList;\n    if (this.filterText) {\n      list = list.filter(item => item.name.includes(this.filterText));\n    }\n\n    switch (this.selectedFilter) {\n      case 'important':\n        return list.filter(item => item.isImportant);\n        break;\n      case 'done':\n        return list.filter(item => item.isDone);\n        break;\n      case 'all':\n      default:\n        return list;\n    }\n  }\n}\n","<div class=\"todo-list\">\n  <mat-list>\n    <app-todo-list-item\n      *ngFor=\"let item of getList()\"\n      [text]=\"item.name\"\n      [isDone]=\"item.isDone\"\n      [isImportant]=\"item.isImportant\"\n\n      (onDelete)=\"onItemDelete(item)\"\n      (onDone)=\"onItemDone(item)\"\n      (onImportant)=\"onItemImportant(item)\"\n    ></app-todo-list-item>\n  </mat-list>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-todo-options',\n  templateUrl: './todo-options.component.html',\n  styleUrls: ['./todo-options.component.scss']\n})\nexport class TodoOptionsComponent implements OnInit {\n  @Output() onFilterSelect = new EventEmitter();\n  @Output() onFilterTextInput = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"app-options\">\n  <mat-form-field class=\"todo-list__input\">\n    <mat-label>Filter to-do</mat-label>\n    <input\n      #filterTextInput\n      matInput\n      placeholder=\"\"\n      value=\"\"\n      (input)=\"this.onFilterTextInput.emit(filterTextInput.value);\"\n    >\n  </mat-form-field>\n\n  <mat-button-toggle-group\n    name=\"todoItemOption\"\n    class=\"app-options__buttons\"\n    value=\"all\"\n  >\n    <mat-button-toggle\n      value=\"important\"\n      (click)=\"this.onFilterSelect.emit('important');\"\n    >\n      Important\n    </mat-button-toggle>\n    <mat-button-toggle\n      value=\"done\"\n      (click)=\"this.onFilterSelect.emit('done');\"\n    >\n      Done\n    </mat-button-toggle>\n    <mat-button-toggle\n      value=\"all\"\n      (click)=\"this.onFilterSelect.emit('all');\"\n    >\n      All\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-item/add-item.component.ts","./src/app/add-item/add-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/todo-list-item/todo-list-item.component.ts","./src/app/todo-list-item/todo-list-item.component.html","./src/app/todo-list.service.ts","./src/app/todo-list/todo-list.component.ts","./src/app/todo-list/todo-list.component.html","./src/app/todo-options/todo-options.component.ts","./src/app/todo-options/todo-options.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {TodoListService} from \"../todo-list.service\";\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  constructor(private todoListService: TodoListService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAddItem(txt: string): void {\n    this.todoListService.add(txt);\n  }\n\n}\n","<mat-form-field class=\"todo-list__input\">\n  <mat-label>Add new to-do</mat-label>\n  <input\n    #addItem\n    matInput\n    placeholder=\"Master TypeScript and Angular\"\n    value=\"\"\n  >\n</mat-form-field>\n\n<button\n  mat-raised-button\n  class=\"btn-addtodo\"\n  (click)=\"onAddItem(addItem.value); addItem.value='';\"\n>\n  Add to-do\n</button>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\n  selectedFilter: string;\n  filterText: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  setFilter(filt) {\n    this.selectedFilter = filt;\n  }\n\n  setFilterText(text) {\n    this.filterText = text;\n  }\n}\n","<div class=\"page\">\n  <app-header\n    class=\"app-header\"\n  ></app-header>\n\n  <main class=\"app-container\">\n\n    <app-todo-options\n      (onFilterSelect)=\"setFilter($event);\"\n      (onFilterTextInput)=\"setFilterText($event);\"\n    ></app-todo-options>\n    <app-todo-list\n      [selectedFilter]=\"selectedFilter\"\n      [filterText]=\"filterText\"\n    ></app-todo-list>\n    <app-add-item></app-add-item>\n\n  </main>\n\n  <footer class=\"app-footer\"></footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListItemComponent } from './todo-list-item/todo-list-item.component';\nimport { AddItemComponent } from './add-item/add-item.component';\nimport { TodoOptionsComponent } from './todo-options/todo-options.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    TodoListItemComponent,\n    AddItemComponent,\n    TodoOptionsComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatDividerModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TodoListService} from \"../todo-list.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public todoListService: TodoListService) { }\n\n  ngOnInit(): void {\n  }\n}\n","<header>\n  <h1>Angular ToDo App</h1>\n  <p>{{this.todoListService.getDoneTodosCount()}} of {{this.todoListService.getAllTodosCount()}} done</p>\n</header>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-todo-list-item',\n  templateUrl: './todo-list-item.component.html',\n  styleUrls: ['./todo-list-item.component.scss']\n})\nexport class TodoListItemComponent implements OnInit {\n\n  @Input() text: string;\n  @Input() isDone: boolean;\n  @Input() isImportant: boolean;\n\n  @Output() onDelete = new EventEmitter();\n  @Output() onImportant = new EventEmitter();\n  @Output() onDone = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<mat-list-item class=\"todo-list-item\">\n  <div class=\"item-description {{isImportant?'item-important':''}} {{isDone ? 'item-done' : ''}}\">{{text}}</div>\n\n  <div class=\"action-buttons\">\n    <button\n      mat-button\n      class=\"btn-important\"\n      (click)=\"onImportant.emit()\"\n    >\n      <mat-icon>notification_important</mat-icon>\n    </button>\n    <button\n      mat-button\n      class=\"btn-done\"\n      (click)=\"onDone.emit()\"\n    >\n      <mat-icon>done_all</mat-icon>\n    </button>\n    <button\n      mat-button\n      class=\"btn-delete\"\n      (click)=\"onDelete.emit()\"\n    >\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n\n</mat-list-item>\n<mat-divider></mat-divider>\n\n","import {Injectable} from '@angular/core';\n\nexport class TodoItem {\n  name: string;\n  isDone: boolean;\n  isImportant: boolean;\n\n  constructor(text: string) {\n    this.name = text;\n    this.isDone = false;\n    this.isImportant = false;\n  }\n}\n\nexport interface ITodoService {\n  add(todoText: string);\n\n  remove(idx: number);\n\n  update(idx: number, record: TodoItem);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService implements ITodoService {\n\n  public todoList: Array<TodoItem>;\n\n  constructor() {\n    this.todoList = new Array<TodoItem>();\n    this.init();\n  }\n\n  add(todoText: string) {\n    this.todoList.push(new TodoItem(todoText));\n  }\n\n  remove(idx: number) {\n    this.todoList.splice(idx, 1);\n  }\n\n  update(idx: number, record: TodoItem) {\n  }\n\n  init() {\n    this.add('Learn HTML');\n    this.add('Learn CSS');\n    this.add('Learn JavaScript');\n    this.add('Learn Angular');\n    this.add('Make something awesome ');\n    this.add('Profit');\n  }\n\n  getDoneTodosCount() {\n    return this.todoList.filter(item => item.isDone).length;\n  }\n\n  getAllTodosCount() {\n    return this.todoList.length;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {TodoItem, TodoListService} from '../todo-list.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss']\n})\nexport class TodoListComponent implements OnInit {\n\n  @Input() selectedFilter: string;\n  @Input() filterText: string;\n\n  constructor(public todoListService: TodoListService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onItemDelete(item): void {\n    this.todoListService.todoList.splice(\n      this.todoListService.todoList.indexOf(item),\n      1\n    );\n  }\n\n  onItemImportant(item): void {\n    item.isImportant = !item.isImportant;\n  }\n\n  onItemDone(item): void {\n    item.isDone = !item.isDone;\n  }\n\n  getList(): TodoItem[] {\n\n    let list = this.todoListService.todoList;\n    if (this.filterText) {\n      list = list.filter(item => item.name.includes(this.filterText));\n    }\n\n    switch (this.selectedFilter) {\n      case 'important':\n        return list.filter(item => item.isImportant);\n        break;\n      case 'done':\n        return list.filter(item => item.isDone);\n        break;\n      case 'all':\n      default:\n        return list;\n    }\n  }\n}\n","<div class=\"todo-list\">\n  <mat-list>\n    <app-todo-list-item\n      *ngFor=\"let item of getList()\"\n      [text]=\"item.name\"\n      [isDone]=\"item.isDone\"\n      [isImportant]=\"item.isImportant\"\n\n      (onDelete)=\"onItemDelete(item)\"\n      (onDone)=\"onItemDone(item)\"\n      (onImportant)=\"onItemImportant(item)\"\n    ></app-todo-list-item>\n  </mat-list>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-todo-options',\n  templateUrl: './todo-options.component.html',\n  styleUrls: ['./todo-options.component.scss']\n})\nexport class TodoOptionsComponent implements OnInit {\n  @Output() onFilterSelect = new EventEmitter();\n  @Output() onFilterTextInput = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"app-options\">\n  <mat-form-field class=\"todo-list__input\">\n    <mat-label>Filter to-do</mat-label>\n    <input\n      #filterTextInput\n      matInput\n      placeholder=\"\"\n      value=\"\"\n      (input)=\"this.onFilterTextInput.emit(filterTextInput.value);\"\n    >\n  </mat-form-field>\n\n  <mat-button-toggle-group\n    name=\"todoItemOption\"\n    class=\"app-options__buttons\"\n    value=\"all\"\n  >\n    <mat-button-toggle\n      value=\"important\"\n      (click)=\"this.onFilterSelect.emit('important');\"\n    >\n      Important\n    </mat-button-toggle>\n    <mat-button-toggle\n      value=\"done\"\n      (click)=\"this.onFilterSelect.emit('done');\"\n    >\n      Done\n    </mat-button-toggle>\n    <mat-button-toggle\n      value=\"all\"\n      (click)=\"this.onFilterSelect.emit('all');\"\n    >\n      All\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}